=======================5 stycznia 2024=======================

Zapytania SQL dokonujące agregacji tzw. zapytania agregujące posługują się trzema ważnymi elementami
składniowymi:
-klauzulą GROUP BY, wskazującą sposób podziału rekordów tabeli na tzw.grupy,
-funkcjami grupowymi SQL, ktore umozliwiaja wyliczanie sum, srednich, odchylen, minimów, maksymw itp. dla kazdej grupy.
-klauzulą HAVING, umozliwiajaca odrzucenie grup niespełniających podanego warunku logicznego.

sum() - suma wartosci podanej kolumny we wszystkich rekordach grupy
avg() - srednia arytmetyczna wartosci podanej kolumny we wszystkich rekordach grupy
min() - najmniejsza wartosc podanej kolumny we wszystkich rekordach grupy
max() - najwieksza wartosc podanej kolumny we wszystkich rekordach grupy
count(*) - liczba wszystkich rekordow grupy


select funkcja_grupowa(kolumna) from tabela group by kolumna_grupująca

przyklad
select miasto, avg(pensja) from pracownicy group by miasto
jaka jest srednia pensji w roznych miastach
czyli celem jest podzial pracownikow wg. miast, a nastepnie wyznaczenie sredniej pensji dla kazdego miasta (kazdej grupy)

ZAPYTANIE
select AVG(pensja) from pracownicy 
select round(pensja) from pracownicy  
round ci zaokragla


ZADANIE
wyznacz srednia pensje wszystkich pracownikow niepracujących w londynie


select avg(pensja), miasto from pracownicy where miasto!="London" group by miasto;

albo not like


ZADANIE 2
wyznacz srednie pensje pracownikow z pdozialem na miasta a nastepnie wybeirz te grupy (miasta) ktorych srednia pensja przekroczyla 100

select avg(pensja), miasto from pracownicy group by miasto HAVING avg(pensja)>100;




ZADANIA NA SZYBKOSC

zad1
wyswieyl dla kazdego roku produkcji filmu srednia cene wypozyczenia

select avg(cena), rok_produkcji from filmy GROUP by rok_produkcji order by rok_produkcji desc;

zad2
wyswietl cene najdrozszegof filmu w wypozycz
select max(cena) from filmy;

zad3
select count(tytul) from filmy group by rok_produkcji having rok_produkcji='1984';

zad4
ile razy wypozyczono film taksowkarz

select count(wypozyczenia.id_kopii) from wypozyczenia join kopie on kopie.id_kopii=wypozyczenia.id_kopii where kopie.id_filmu='4';

zad5
jaki byl sredni czs trwania wypozyczenia filmu 'ronin'? z dokladnoscia miejsca po przecinku
SELECT round(avg(data_zwrotu-data_wypozyczenia),1) from wypozyczenia 
join kopie on kopie.id_kopii=wypozyczenia.id_kopii 
join filmy on filmy.id_filmu=kopie.id_filmu where tytul='Ronin';


zad6
SELECT filmy.tytul,round(MIN(wypozyczenia.data_zwrotu-wypozyczenia.data_wypozyczenia),1), round( MAX(wypozyczenia.data_zwrotu-wypozyczenia.data_wypozyczenia),1), round( AVG(wypozyczenia.data_zwrotu-wypozyczenia.data_wypozyczenia),1) as sre, COUNT(filmy.id_filmu) as razy FROM wypozyczenia natural JOIN kopie natural JOIN filmy 
GROUP BY filmy.id_filmu order by razy desc;
zad7
SELECT klienci.imie,klienci.nazwisko,COUNT(wypozyczenia.id_kopii) from klienci 
natural join wypozyczenia GROUP BY wypozyczenia.id_klienta order by wypozyczenia.id_kopii;
zad8
SELECT aktorzy.nazwisko, COUNT(obsada.id_filmu) as filmy from aktorzy 
join obsada on aktorzy.id_aktora = obsada.id_aktora 
GROUP BY aktorzy.id_aktora 
HAVING COUNT(obsada.id_filmu)>1;
zad9
SELECT klienci.nazwisko,sum(filmy.cena) FROM `klienci` 
JOIN wypozyczenia ON wypozyczenia.id_klienta=klienci.id_klienta join kopie on kopie.id_kopii=wypozyczenia.id_kopii
JOIN filmy on filmy.id_filmu=kopie.id_filmu GROUP by  klienci.id_klienta;
